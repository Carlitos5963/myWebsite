{"version":3,"sources":["components/Navbar.js","Card.js","CardList.js","Content.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","cardStyle","width","color","textStyle","position","textAlign","whiteSpace","Card","_ref","section","linkCom","header","date","body","img","links","length","className","style","src","alt","aboArray","eduArray","proArray","expArray","CardList","CardArray","content","map","contents","src_Card","i","props","push","name","App","components_Navbar","src_CardList","Content","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62b4f272.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a class=\"navbar-brand\" href=\"#\">Welcome!</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul class=\"navbar-nav\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#aboAnchor\">About</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#eduAnchor\">Education</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#proAnchor\">Projects</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">Contact</a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n                </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport 'tachyons';\r\n\r\nconst cardStyle = {\r\n    width: '99%',\r\n    color: 'black'\r\n}\r\n\r\nconst textStyle = {\r\n    position: 'relative',\r\n    textAlign: 'center',\r\n    whiteSpace: 'pre-wrap'\r\n};\r\n\r\nconst Card = ({ id, section, header, date, body, img, links }) => {\r\n\r\n    //If a card has a link, it will render a link leading to more information\r\n    var linkCom;\r\n    if(links.length <= 3)\r\n        linkCom = '';\r\n    else\r\n        linkCom = <a href={links}>For More Information</a>\r\n\r\n    return(\r\n        <div className='flex items-center tc bg-light-green dib br3 pa3 ma2 grow shadow-5 bw2' style={cardStyle}>\r\n            <img className='w-25 ma10' src={img} alt=\"Loading...\"></img>\r\n            <div className='w-50' style={textStyle}>\r\n                <h2>{header}</h2>    \r\n                <p className='tl pa3'>{body}</p>\r\n                {linkCom}\r\n            </div>\r\n            <h4 className='w-25'>{date}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nvar aboArray = [];\r\nvar eduArray = [];\r\nvar proArray = [];\r\nvar expArray = [];\r\n\r\n//Returns several card arrays based on what section they are in\r\nconst CardList = ( {content} ) => {\r\n\r\n    //Array holds every card before it is filtered\r\n    const CardArray = content.map((contents) => {\r\n        return <Card id={contents.id} section={contents.section} header={contents.header} date={contents.date} body={contents.body} img={contents.img} links={contents.links}/>\r\n    });\r\n\r\n    //This will filter each card into the appropriate array\r\n    for(var i = 0; i < CardArray.length; i++){\r\n        switch(CardArray[i].props.section){\r\n            case 'about':\r\n                aboArray.push(CardArray[i]);\r\n                break;\r\n            case 'education':\r\n                eduArray.push(CardArray[i]);\r\n                break;\r\n            case 'projects':\r\n                proArray.push(CardArray[i]);\r\n                break;\r\n            case \"experience\":\r\n                expArray.push(CardArray[i]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Return organized sections of cards based on their section\r\n    return (\r\n        <div>\r\n            <h2 id='about' name=\"aboAnchor\">About Me</h2>\r\n            {aboArray}\r\n            <h2 id='education' name=\"eduAnchor\">Education</h2>\r\n            {eduArray}\r\n            <h2 id='projects' name=\"proAnchor\">Projects</h2>\r\n            {proArray}\r\n            <h2 id='experience' name=\"expAnchor\">Experience</h2>\r\n            {expArray}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default CardList;","//This is where I will add content if needed or if I need to update text on the website\r\nexport const content = [\r\n    {\r\n      id: 1,\r\n      section: 'about',\r\n      header: 'My Life in a Nutshell',\r\n      date: '1994 - Current',\r\n      body: '*****CLASSIFIED***** \\n**Please contact for more information**',\r\n      img: 'https://i.imgur.com/WEPIqmL.jpg',\r\n      links: ''\r\n    },\r\n    {\r\n      id: 3,\r\n      section: 'education',\r\n      header: 'San Diego State University',\r\n      date: '2016 - 2019',\r\n      body: 'Bachelor of Science - Computer Science',\r\n      img: 'https://map.sdsu.edu/tsou/images/SDSU.gif',\r\n      links: ''\r\n    },\r\n    {\r\n      id: 4,\r\n      section: 'education',\r\n      header: 'San Diego Mesa College',\r\n      date: '2013 - 2016',\r\n      body: 'Associate of Arts - Psychology',\r\n      img: 'https://s3-us-west-2.amazonaws.com/scorestream-team-profile-pictures/273346/20181010231931_905_mascot300.png',\r\n      links: ''\r\n    },\r\n    {\r\n      id: 5,\r\n      section: 'projects',\r\n      header: 'Unity Game Development',\r\n      date: 'Feb 2019',\r\n      body: '',\r\n      img: 'https://i.imgur.com/r2f1A6b.jpg',\r\n      links: ''\r\n    },\r\n    {\r\n      id: 6,\r\n      section: 'projects',\r\n      header: 'Website using React',\r\n      date: 'August 2019',\r\n      body: 'I became interested in web development shortly after graduating college. I decided to learn HTML5 and CSS3 for basic design and JavaScript for functionality, but it wasn\\'t until I learned React that I decided to create this portfolio website. Similar to object orietned programming, React was a great framework to start with because it was component oriented, making everything simple to reuse and customize',\r\n      img: 'https://cdn.worldvectorlogo.com/logos/react.svg',\r\n      links: 'https://reactjs.org/'\r\n    },\r\n    {\r\n      id: 7,\r\n      section: 'experience',\r\n      header: 'Living Beyond the Label - Smart Guider',\r\n      date: 'June 2018 -  Feb 2019',\r\n      body: 'I interned as a software engineer and had the opportunity to work with other students like myself to develop a solution to creating a self guiding cane. \\nWe used Lidar sensors and ultrasonic to detect objects nearby, paired with Raspberry Pi\\'s and Arduino\\'s to control the movement, we were able to get a protoype working.',\r\n      img: 'https://scontent-lax3-1.xx.fbcdn.net/v/t1.0-9/38480004_305261986888632_2425001628391178240_n.png?_nc_cat=105&_nc_oc=AQlTqv4t2tMrQuFAwrIY9lFf0Htv02x_--tA2uvEKLa854HPyYg8GCOBjfkv4HVLaAo&_nc_ht=scontent-lax3-1.xx&oh=c63859a6baf7c383c67d8ffe73e51dd7&oe=5DD42266',\r\n      links: 'http://livingbeyondthelabel.net/'\r\n    },\r\n    {\r\n      id: 8,\r\n      section: 'experience',\r\n      header: 'Reading International',\r\n      date: 'Nov 2013 - Current',\r\n      body: 'I have been with Reading since my freshman year of college. Quickly rising to a supervisor position, I learned how to lead small teams of people to accomplish goals efficiently. Shortly after that, I became an assistant manager, which came with more responsibilty and opportunity to learn: \\n\\t- Employee scheduling and management\\n\\t- Effective communication and conflict resolution\\n\\t- Analyzing inventory needs and adjusting as necessary\\n\\t- Evaluation of employee performance\\n\\t- Develop training procedures and apply company policy',\r\n      img: 'http://www.readingrdi.com/wp-content/themes/reading/images/home/logo.png',\r\n      links: ''\r\n    },\r\n  ];\r\n  \r\n  export default content;","import React from 'react';\nimport '../App.css';\nimport Navbar from '../components/Navbar';\nimport CardList from '../CardList';\nimport Content from '../Content';\n\nimport 'tachyons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n      </header>\n      <body className=\"App-body tc\">\n        <CardList content={Content}/>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}